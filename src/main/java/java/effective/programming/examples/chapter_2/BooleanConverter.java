package java.effective.programming.examples.chapter_2;

/**
 * Рассмотрите применение статических
 * фабричных методов вместо конструкторов.
 * <br>
 * 1. Одним из преимуществ статических фабричных методов является то,
 * что, в отличие от конструкторов, они имеют имена.
 * <br>
 * 2. Вторым преимуществом статических фабричных методов является то,
 * что, в отличие от конструкторов, они не обязаны создавать новые объ
 * екты при каждом вызове.
 * <br>
 * 3. Третье преимущество статических фабричных методов заключается в
 * том, что, в отличие от конструкторов, они могут возвращать объект лю
 * бого подтипа их возвращаемого типа.
 * <br>
 * 4. Четвертым преимуществом статических фабричных методов является
 * то, что класс возвращенного объекта может варьироваться от вызова к
 * вызову в зависимости от входных параметров.
 * <br>
 * 5. Пятое преимущество статических фабрик заключается в том, что класс
 * возвращаемого объекта не обязан существовать во время разработки
 * класса, содержащего метод.
 */
public class BooleanConverter {

    private BooleanConverter() {
    }

    public static Boolean valueOf(boolean b) {
        return b ? Boolean.TRUE : Boolean.FALSE;
    }
}
